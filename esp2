#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <TMath.h>

int graf_exp2(){

FILE *fp1 = fopen("//Users//rosmyra//Desktop//ROSEMARIE.txt", "r"); 
if(fp1 == NULL)
	{
	printf("file non trovato!");
	exit(1);
	}
int frequenzaprincipale;
fscanf(fp1, "%d", &frequenzaprincipale);
int ampiezzainvolt;
fscanf(fp1, "%d", &ampiezzainvolt);
int frequenzadicampionamento; 
int i = 0, j = 0; 
//TCanvas *c ; 
int numerodicampionicheavreivolutoprendere; 
//TGraph* gr[6];  
float y; 
float x = 0.; 
float xvettore[200];
float yvettore[200];
int nmisure = 200; 
for (i=0; i<nmisure; i++){
	xvettore[i] = 0.; 
	yvettore[i] = 0.;

}

fscanf(fp1, "%d", &frequenzadicampionamento);

fscanf(fp1, "%d", &numerodicampionicheavreivolutoprendere);
xvettore[0] = 0.;
fscanf(fp1, "%f", &yvettore[0]);
printf("misura zero prima frequenza: x is %f, y is %f\n", xvettore[0], yvettore[0]);
for(i=1; i<nmisure; i++){
    xvettore[i] = xvettore[i-1] + (1./frequenzadicampionamento);
    fscanf(fp1, "%f", &yvettore[i]);
    printf("x is %f, y is %f\n", xvettore[i], yvettore[i]);
}
TCanvas *c = new TCanvas("c0","Sinusoidal Sampling",200,10,500,300); 
TGraph *gr = new TGraph(nmisure,xvettore,yvettore);

gr->SetMarkerColor(1); 
gr->GetXaxis()->SetTitle("Time");
gr->GetYaxis()->SetTitle("Volt (V)");
gr->SetTitle("1kHz sampling");
/*gr[1]->SetTitle("500Hz sampling");
gr[2]->SetTitle("250Hz sampling");
gr[3]->SetTitle("190Hz sampling");
gr[4]->SetTitle("150Hz sampling");
gr[5]->SetTitle("110Hz sampling"); */


//c->Draw(); 
/*c[1]->Draw(); 
c[2]->Draw(); 
c[3]->Draw(); 
c[4]->Draw(); 
c[5]->Draw(); */
//gr->Draw("A*");
/*gr[1]->Draw("A*");
gr[2]->Draw("A*");
gr[3]->Draw("A*");
gr[4]->Draw("A*");
gr[5]->Draw("A*"); */
TF1  *f1= new TF1("f1","[2]*sin(x*2*pi*[1]+[0])",-0.01,0.2);
f1->SetParNames("Phase","Frequency","Amplitude");
		f1->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
		//fsin[i]->SetParameter(0,TMath::Pi()/2);
		//fsin[i]->SetParameter(1,110);
		//f1->SetParameter(2,0.5);
		f1->SetParLimits(2,0.4,0.8);
		f1->SetParLimits(1,80,120);
//auto l = new TLegend(0.65,0.7,0.89,0.89);
 //  l->AddEntry(f,"Fit result", "L");
   //l->Draw();
f1 ->SetLineColor(4);
TF1  *f2= new TF1("f2","0.5*sin(x*2*pi*100+[0])",-0.01,0.2);
f2->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f2 ->SetLineColor(2);
//gr->Fit(f1);
//f2->Draw("same");


for (i=0; i<nmisure; i++){
	xvettore[i] = 0.; 
	yvettore[i] = 0.;

}

fscanf(fp1, "%d", &frequenzadicampionamento);

fscanf(fp1, "%d", &numerodicampionicheavreivolutoprendere);
xvettore[0] = 0.;
fscanf(fp1, "%f", &yvettore[0]);
printf("misura zero seconda frequenza: x is %f, y is %f\n", xvettore[0], yvettore[0]);
for(i=1; i<nmisure; i++){
    xvettore[i] = xvettore[i-1] + (1./frequenzadicampionamento);
    fscanf(fp1, "%f", &yvettore[i]);
    printf("x is %f, y is %f\n", xvettore[i], yvettore[i]);
}
TCanvas *c1= new TCanvas("c1","Sinusoidal Sampling",200,10,500,300); 
TGraph *gr1 = new TGraph(nmisure,xvettore,yvettore);

gr1->SetMarkerColor(1); 
gr1->GetXaxis()->SetTitle("Time");
gr1->GetYaxis()->SetTitle("Volt (V)");
gr1->SetTitle("500Hz sampling");
/*gr[1]->SetTitle("500Hz sampling");
gr[2]->SetTitle("250Hz sampling");
gr[3]->SetTitle("190Hz sampling");
gr[4]->SetTitle("150Hz sampling");
gr[5]->SetTitle("110Hz sampling"); */


c1->Draw(); 
/*c[1]->Draw(); 
c[2]->Draw(); 
c[3]->Draw(); 
c[4]->Draw(); 
c[5]->Draw(); */
gr1->Draw("A*");
/*gr[1]->Draw("A*");
gr[2]->Draw("A*");
gr[3]->Draw("A*");
gr[4]->Draw("A*");
gr[5]->Draw("A*"); */
TF1  *f11= new TF1("f11","[2]*sin(x*2*pi*[1]+[0]*pi)",-0.01,0.5);
f11->SetParNames("Phase","Frequency","Amplitude");
//f11->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f11->SetParLimits(0,0.,360.0);

//fsin[i]->SetParameter(0,TMath::Pi()/2);
		//fsin[i]->SetParameter(1,110);
f11->SetParameter(2,0.5);
//f11->SetParLimits(2,0.4,0.8);
f11->SetParLimits(1,80,120);
//auto l = new TLegend(0.65,0.7,0.89,0.89);
 //  l->AddEntry(f,"Fit result", "L");
   //l->Draw();
f11 ->SetLineColor(4);
TF1  *f21= new TF1("f21","0.5*sin(x*2*pi*100+[0])",-0.01,0.5);
f21->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f21 ->SetLineColor(2);
gr1->Fit(f11);
f21->Draw("same");


for (i=0; i<nmisure; i++){
	xvettore[i] = 0.; 
	yvettore[i] = 0.;

}

fscanf(fp1, "%d", &frequenzadicampionamento);

fscanf(fp1, "%d", &numerodicampionicheavreivolutoprendere);
xvettore[0] = 0.;
fscanf(fp1, "%f", &yvettore[0]);
printf("misura zero terza frequenza: x is %f, y is %f\n", xvettore[0], yvettore[0]);
for(i=1; i<nmisure; i++){
    xvettore[i] = xvettore[i-1] + (1./frequenzadicampionamento);
    fscanf(fp1, "%f", &yvettore[i]);
    printf("x is %f, y is %f\n", xvettore[i], yvettore[i]);
}
TCanvas *c2= new TCanvas("c2","Sinusoidal Sampling",200,10,500,300); 
TGraph *gr2 = new TGraph(nmisure,xvettore,yvettore);

gr2->SetMarkerColor(1); 
gr2->GetXaxis()->SetTitle("Time");
gr2->GetYaxis()->SetTitle("Volt (V)");
gr2->SetTitle("250Hz sampling");
/*gr[1]->SetTitle("500Hz sampling");
gr[2]->SetTitle("250Hz sampling");
gr[3]->SetTitle("190Hz sampling");
gr[4]->SetTitle("150Hz sampling");
gr[5]->SetTitle("110Hz sampling"); */


c2->Draw(); 
/*c[1]->Draw(); 
c[2]->Draw(); 
c[3]->Draw(); 
c[4]->Draw(); 
c[5]->Draw(); */
gr2->Draw("A*");
/*gr[1]->Draw("A*");
gr[2]->Draw("A*");
gr[3]->Draw("A*");
gr[4]->Draw("A*");
gr[5]->Draw("A*"); */
TF1  *f12= new TF1("f12","[2]*sin(x*2*pi*[1]+[0]*pi)",-0.01,0.8);
f12->SetParNames("Phase","Frequency","Amplitude");
//f11->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f12->SetParLimits(0,0.,360.0);

//fsin[i]->SetParameter(0,TMath::Pi()/2);
		//fsin[i]->SetParameter(1,110);
f12->SetParameter(2,0.5);
f12->SetParLimits(2,0.4,0.8);
f12->SetParLimits(1,80,120);
//auto l = new TLegend(0.65,0.7,0.89,0.89);
 //  l->AddEntry(f,"Fit result", "L");
   //l->Draw();
f12 ->SetLineColor(4);
TF1  *f22= new TF1("f22","0.5*sin(x*2*pi*100+[0])",-0.01,0.8);
f22->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f22 ->SetLineColor(2);
gr2->Fit(f12);
f22->Draw("same");


for (i=0; i<nmisure; i++){
	xvettore[i] = 0.; 
	yvettore[i] = 0.;

}

fscanf(fp1, "%d", &frequenzadicampionamento);

fscanf(fp1, "%d", &numerodicampionicheavreivolutoprendere);
xvettore[0] = 0.;
fscanf(fp1, "%f", &yvettore[0]);
printf("misura zero quarta frequenza: x is %f, y is %f\n", xvettore[0], yvettore[0]);
for(i=1; i<nmisure; i++){
    xvettore[i] = xvettore[i-1] + (1./frequenzadicampionamento);
    fscanf(fp1, "%f", &yvettore[i]);
    printf("x is %f, y is %f\n", xvettore[i], yvettore[i]);
}
TCanvas *c3= new TCanvas("c3","Sinusoidal Sampling",200,10,500,300); 
TGraph *gr3 = new TGraph(nmisure,xvettore,yvettore);

gr3->SetMarkerColor(1); 
gr3->GetXaxis()->SetTitle("Time");
gr3->GetYaxis()->SetTitle("Volt (V)");
gr3->SetTitle("190Hz sampling");
/*gr[1]->SetTitle("500Hz sampling");
gr[2]->SetTitle("250Hz sampling");
gr[3]->SetTitle("190Hz sampling");
gr[4]->SetTitle("150Hz sampling");
gr[5]->SetTitle("110Hz sampling"); */


c3->Draw(); 
/*c[1]->Draw(); 
c[2]->Draw(); 
c[3]->Draw(); 
c[4]->Draw(); 
c[5]->Draw(); */
gr3->Draw("A*");
/*gr[1]->Draw("A*");
gr[2]->Draw("A*");
gr[3]->Draw("A*");
gr[4]->Draw("A*");
gr[5]->Draw("A*"); */
TF1  *f13= new TF1("f13","[2]*sin(x*2*pi*[1]+[0]*pi)",-0.01,1);
f13->SetParNames("Phase","Frequency","Amplitude");
//f11->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f13->SetParLimits(0,0.,360.0);

//fsin[i]->SetParameter(0,TMath::Pi()/2);
		//fsin[i]->SetParameter(1,110);
f13->SetParameter(2,0.5);
f13->SetParLimits(2,0.4,0.8);
f13->SetParLimits(1,80,120);
//auto l = new TLegend(0.65,0.7,0.89,0.89);
 //  l->AddEntry(f,"Fit result", "L");
   //l->Draw();
f13 ->SetLineColor(4);
TF1  *f23= new TF1("f23","0.5*sin(x*2*pi*100+[0])",-0.01,1);
f23->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f23 ->SetLineColor(2);
gr3->Fit(f13);
f23->Draw("same");

//quinta 

for (i=0; i<nmisure; i++){
	xvettore[i] = 0.; 
	yvettore[i] = 0.;

}

fscanf(fp1, "%d", &frequenzadicampionamento);

fscanf(fp1, "%d", &numerodicampionicheavreivolutoprendere);
xvettore[0] = 0.;
fscanf(fp1, "%f", &yvettore[0]);
printf("misura zero quinta frequenza: x is %f, y is %f\n", xvettore[0], yvettore[0]);
for(i=1; i<nmisure; i++){
    xvettore[i] = xvettore[i-1] + (1./frequenzadicampionamento);
    fscanf(fp1, "%f", &yvettore[i]);
    printf("x is %f, y is %f\n", xvettore[i], yvettore[i]);
}
TCanvas *c4= new TCanvas("c4","Sinusoidal Sampling",200,10,500,300); 
TGraph *gr4 = new TGraph(nmisure,xvettore,yvettore);

gr4->SetMarkerColor(1); 
gr4->GetXaxis()->SetTitle("Time");
gr4->GetYaxis()->SetTitle("Volt (V)");
gr4->SetTitle("250Hz sampling");
/*gr[1]->SetTitle("500Hz sampling");
gr[2]->SetTitle("250Hz sampling");
gr[3]->SetTitle("190Hz sampling");
gr[4]->SetTitle("150Hz sampling");
gr[5]->SetTitle("110Hz sampling"); */


c4->Draw(); 
/*c[1]->Draw(); 
c[2]->Draw(); 
c[3]->Draw(); 
c[4]->Draw(); 
c[5]->Draw(); */
gr4->Draw("A*");
/*gr[1]->Draw("A*");
gr[2]->Draw("A*");
gr[3]->Draw("A*");
gr[4]->Draw("A*");
gr[5]->Draw("A*"); */
TF1  *f14= new TF1("f14","[2]*sin(x*2*pi*[1]+[0]*pi)",-0.01,0.8);
f14->SetParNames("Phase","Frequency","Amplitude");
//f11->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f14->SetParLimits(0,0.,360.0);

//fsin[i]->SetParameter(0,TMath::Pi()/2);
		//fsin[i]->SetParameter(1,110);
f14->SetParameter(2,0.5);
f14->SetParLimits(2,0.4,0.8);
f14->SetParLimits(1,80,120);
//auto l = new TLegend(0.65,0.7,0.89,0.89);
 //  l->AddEntry(f,"Fit result", "L");
   //l->Draw();
f14 ->SetLineColor(4);
TF1  *f24= new TF1("f24","0.5*sin(x*2*pi*100+[0])",-0.01,0.8);
f24->SetParameter(0,TMath::ASin(yvettore[0]/0.5));
f24 ->SetLineColor(2);
gr4->Fit(f14);
f24->Draw("same");

fclose(fp1);
return 0;
}

